version: '3.8'
services:

  # PostgreSQL Database
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432" # Map the container's port 5432 to the host machine
    environment:
      POSTGRES_DB: postgres # Replace with your PostgreSQL database name
      POSTGRES_USER: postgres # Replace with your PostgreSQL username
      POSTGRES_PASSWORD: postgrespw # Replace with your PostgreSQL password

  # Spring Boot Application
  spring-backend:
    build:
      context: ./backend # Replace with your Spring Boot app directory
      dockerfile: Dockerfile # Replace with your Spring Boot app Dockerfile name
    ports:
      - "8080:8080" # Map the container's port 8080 to the host machine
    depends_on:
      - postgres # Ensure the Spring Boot app starts after the database
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres # Replace with your PostgreSQL database URL
      SPRING_DATASOURCE_USERNAME: postgres # Replace with your PostgreSQL username
      SPRING_DATASOURCE_PASSWORD: postgrespw # Replace with your PostgreSQL password


  # React Frontend
  react-frontend:
    build:
      context: ./frontend # Replace with your React app directory
      dockerfile: Dockerfile # Replace with your React app Dockerfile name
    ports:
      - "3000:3000" # Map the container's port 3000 to the host machine
    depends_on:
      - spring-backend # Ensure the React app starts after the backend
    environment:
      REACT_APP_BACKEND_URL: http://spring-backend:8080 # Replace with your Spring Boot backend URL


  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    depends_on:
      - spring-backend # Ensure the React app starts after the backend
    ports:
      - "9090:9090"
    volumes:
      - ./backend/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    depends_on:
      - prometheus # Ensure the React app starts after prometheus
    ports:
      - "4000:3000"
    restart: unless-stopped
    volumes:
      - ./backend/monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources